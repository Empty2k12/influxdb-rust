name: Rust

on:
  push:
    branches:
      - master
  pull_request:

jobs:
    readmecheck:
        name: README Format Check
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v1
            - uses: dtolnay/rust-toolchain@nightly
            - run: bash ./auxiliary/update_cargo-readme.sh
            - run: bash ./auxiliary/check_readme_consistency.sh

    style:
        name: Style Checks (stable/ubuntu-latest)
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v1
            - uses: dtolnay/rust-toolchain@nightly
              with:
                  components: "rustfmt,clippy"
            - name: Check code formatting
              run: cargo fmt --all -- --check
            - name: Check Clippy lints
              run: cargo clippy --all-targets --all-features -- -D warnings

    compile:
        name: Compile (${{ matrix.rust_release }}/${{ matrix.os }})
        runs-on: ${{ matrix.os }}
        strategy:
            matrix:
                rust_release: [1.42, stable, nightly]
                os: [ubuntu-latest, windows-latest, macOS-latest]

        steps:
            - uses: actions/checkout@v1
            - uses: dtolnay/rust-toolchain@master
              with:
                  toolchain: ${{ matrix.rust_release }}
            - name: Build
              run: cargo build --verbose

    integration_test:
        name: Integration Tests (stable/ubuntu-latest)
        runs-on: ubuntu-latest
        services:
            influxdb:
                image: influxdb
                ports:
                    - 8086:8086
            authed_influxdb:
                image: influxdb
                ports:
                    - 9086:8086
                env:
                    INFLUXDB_HTTP_AUTH_ENABLED: true
                    INFLUXDB_ADMIN_USER: admin
                    INFLUXDB_ADMIN_PASSWORD: password
                    INFLUXDB_USER: nopriv_user
                    INFLUXDB_USER_PASSWORD: password

        steps:
            - uses: actions/checkout@v1
            - uses: dtolnay/rust-toolchain@nightly
            - run: cargo test --package influxdb --package influxdb_derive --all-features --no-fail-fast
